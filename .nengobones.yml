project_name: NengoOCL
pkg_name: nengo_ocl
repo_name: nengo/nengo-ocl
description: OpenCL-based simulator for Nengo neural models

copyright_start: 2013
license: gpl-v2

contributing_rst: {}

license_rst: {}

manifest_in:
  recursive-include:
    - examples *.py

pyproject_toml: {}

pre_commit_config_yaml: {}

docs_conf_py:
  nengo_logo: nengo-ocl-full-light.svg
  nengo_logo_color: "#69c530"
  intersphinx_mapping:
    pyopencl: https://documen.tician.de/pyopencl/
    scipy: https://docs.scipy.org/doc/scipy/reference/

setup_py:
  url: https://www.nengo.ai/nengo-ocl/
  include_package_data: True
  install_req:
    - nengo>=3.1.0
    - mako
    - pyopencl
  docs_req:
    - click>=7.0
    - matplotlib>=1.4
    - nbsphinx
    - nengo-sphinx-theme>=1.2.0
    - numpydoc>=0.6.0
    - sphinx>=1.8
  tests_req:
    - matplotlib>=1.4
    - pytest>=3.6.0
    - pytest-allclose>=1.0.0
    - pytest-plt>=1.0.0
    - pytest-rng>=1.0.0
  entry_points:
    nengo.backends:
      - ocl = nengo_ocl:Simulator
  classifiers:
    - "Development Status :: 4 - Beta"
    - "Framework :: Nengo"
    - "Intended Audience :: Science/Research"
    - "Operating System :: OS Independent"
    - "Programming Language :: Python"
    - "Programming Language :: Python :: 3.6"
    - "Programming Language :: Python :: 3.7"
    - "Topic :: Scientific/Engineering"
    - "Topic :: Scientific/Engineering :: Artificial Intelligence"

setup_cfg:
  pytest:
    norecursedirs:
      - plots
    nengo_simloader: nengo_ocl.tests.make_test_sim
    nengo_neurons:
      - nengo.Direct
      - nengo.LIF
      - nengo.LIFRate
      - nengo.RectifiedLinear
      - nengo.Sigmoid
      - nengo.SpikingRectifiedLinear
    nengo_test_unsupported:
      tests/test_cache.py::test_cache_concurrency:
        Starting multiple simulators not supported
      tests/test_connection.py::test_list_indexing*:
        Advanced indexing with repeated indices not implemented
      tests/test_connection.py::test_neuron_advanced_indexing:
        Advanced indexing with repeated indices not implemented
      tests/test_copy.py::test_pickle_sim*:
        Pickling simulator not implemented
      tests/test_neurons.py::test_izhikevich:
        Izhikevich neurons not implemented
      tests/test_neurons.py::test_lif_min_voltage*:
        Min voltage not implemented
      tests/test_node.py::test_none:
        No error if nodes output None
      tests/test_node.py::test_invalid_values*:
        No error for invalid node values
      tests/test_neurons.py::test_direct_mode_nonfinite_value:
        No error for non-finite values
      tests/test_processes.py::test_brownnoise:
        Filtered noise processes not yet implemented
      tests/test_ensemble.py::test_noise_copies_ok*:
        Filtered noise processes not yet implemented
      tests/test_processes.py::TestPiecewise*test_interpolation_?d:
        float32 rounding issues
      tests/test_synapses.py::test_triangle:
        Only linear filters implemented
      tests/test_learning_rules.py::test_custom_type:
        Copying 2-D arrays not implemented
      tests/test_learning_rules.py::test_rls_*:
        RLS learning rule not yet implemented
      tests/test_simulator.py::test_dtype[16]:
        Only float32 dtype supported
      tests/test_simulator.py::test_dtype[64]:
        Only float32 dtype supported
      tests/test_simulator.py::test_entry_point:
        Overridden so we can pass custom test simulators, see
        tests/test_nengo_tests.py::test_entry_point
      tests/test_simulator.py::test_probe_cache:
        Changing simulator seed not implemented
      tests/test_solvers.py::test_all_negative_activities[*:
        Tanh neuron not implemented
      tests/test_transforms.py::test_sparse[False-*:
        Sparse transforms only implemented with Scipy
      tests/test_builder.py::test_commonsig_readonly:
        Specific to nengo.Simulator
    allclose_tolerances:
      # tol for synapses is high b/c Nengo uses SS and we use num/den
      - tests/test_synapses.py::test_* atol=1e-5
      - tests/test_transforms.py::test_convolution[* atol=1e-5

version_py:
  major: 3
  minor: 0
  patch: 0
  release: true

