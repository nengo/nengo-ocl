# Automatically generated by nengo-bones, do not edit this file directly

[build_sphinx]
source-dir = docs
build-dir = docs/_build
all_files = 1

[coverage:run]
source = ./
relative_files = True

[coverage:report]
# Regexes for lines to exclude from consideration
exclude_lines =
    # Have to re-enable the standard pragma
    # place ``# pragma: no cover`` at the end of a line to ignore it
    pragma: no cover

    # Don't complain if tests don't hit defensive assertion code:
    raise NotImplementedError

    # `pass` is just a placeholder, fine if it's not covered
    ^[ \t]*pass$


# Patterns for files to exclude from reporting
omit =
    */tests/test*

[flake8]
exclude =
    __init__.py
ignore =
    E123
    E133
    E203
    E226
    E241
    E242
    E501
    E731
    F401
    W503
max-complexity = 10
max-line-length = 88

[tool:pytest]
norecursedirs =
    .*
    *.egg
    build
    dist
    docs
    plots
nengo_simloader = nengo_ocl.tests.make_test_sim
nengo_neurons =
    nengo.Direct
    nengo.LIF
    nengo.LIFRate
    nengo.RectifiedLinear
    nengo.Sigmoid
    nengo.SpikingRectifiedLinear
nengo_test_unsupported =
    tests/test_cache.py::test_cache_concurrency
        "Starting multiple simulators not supported"
    tests/test_connection.py::test_list_indexing*
        "Advanced indexing with repeated indices not implemented"
    tests/test_connection.py::test_neuron_advanced_indexing
        "Advanced indexing with repeated indices not implemented"
    tests/test_copy.py::test_pickle_sim*
        "Pickling simulator not implemented"
    tests/test_neurons.py::test_izhikevich
        "Izhikevich neurons not implemented"
    tests/test_neurons.py::test_lif_min_voltage*
        "Min voltage not implemented"
    tests/test_node.py::test_none
        "No error if nodes output None"
    tests/test_node.py::test_invalid_values*
        "No error for invalid node values"
    tests/test_neurons.py::test_direct_mode_nonfinite_value
        "No error for non-finite values"
    tests/test_processes.py::test_brownnoise
        "Filtered noise processes not yet implemented"
    tests/test_ensemble.py::test_noise_copies_ok*
        "Filtered noise processes not yet implemented"
    tests/test_processes.py::TestPiecewise*test_interpolation_?d
        "float32 rounding issues"
    tests/test_synapses.py::test_triangle
        "Only linear filters implemented"
    tests/test_learning_rules.py::test_custom_type
        "Copying 2-D arrays not implemented"
    tests/test_learning_rules.py::test_rls_*
        "RLS learning rule not yet implemented"
    tests/test_simulator.py::test_dtype[16]
        "Only float32 dtype supported"
    tests/test_simulator.py::test_dtype[64]
        "Only float32 dtype supported"
    tests/test_simulator.py::test_entry_point
        "Overridden so we can pass custom test simulators, see
        tests/test_nengo_tests.py::test_entry_point"
    tests/test_simulator.py::test_probe_cache
        "Changing simulator seed not implemented"
    tests/test_solvers.py::test_all_negative_activities[*
        "Tanh neuron not implemented"
    tests/test_transforms.py::test_sparse[False-*
        "Sparse transforms only implemented with Scipy"
    tests/test_builder.py::test_commonsig_readonly
        "Specific to nengo.Simulator"
allclose_tolerances =
    tests/test_synapses.py::test_* atol=1e-5
    tests/test_transforms.py::test_convolution[* atol=1e-5
xfail_strict = False

[pylint]

[pylint.messages]
disable =
    arguments-differ,
    assignment-from-no-return,
    attribute-defined-outside-init,
    blacklisted-name,
    comparison-with-callable,
    duplicate-code,
    fixme,
    import-error,
    invalid-name,
    invalid-sequence-index,
    len-as-condition,
    literal-comparison,
    no-else-raise,
    no-else-return,
    no-member,
    no-name-in-module,
    not-an-iterable,
    not-context-manager,
    protected-access,
    redefined-builtin,
    stop-iteration-return,
    too-few-public-methods,
    too-many-arguments,
    too-many-branches,
    too-many-instance-attributes,
    too-many-lines,
    too-many-locals,
    too-many-return-statements,
    too-many-statements,
    unexpected-keyword-arg,
    unidiomatic-typecheck,
    unsubscriptable-object,
    unsupported-assignment-operation,
    unused-argument,

[pylint.imports]
known-third-party =
    matplotlib,
    nengo,
    numpy,
    pytest,

[pylint.format]
max-line-length = 88

[pylint.classes]
valid-metaclass-classmethod-first-arg = metacls

[pylint.reports]
reports = no
score = no

[codespell]
skip = ./build,*/_build,*-checkpoint.ipynb,./.eggs,./*.egg-info,./.git,*/_vendor,./.mypy_cache,
